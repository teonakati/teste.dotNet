<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Web.API</name>
    </assembly>
    <members>
        <member name="M:Web.API.Controllers.BookController.GetBooks">
            <summary>
            Método responsável por retornar todos os livros cadastrados, ordenados por nome - Acesso Livre
            </summary>
            <returns>Todos os livros cadastrados, ordenados por nome.</returns>
            <response code="200">Lista de todos os livros cadastrados.</response>
            <response code="404">Não possui registros a exibir.</response>
            <response code="500">Exceção não tratada.</response>
        </member>
        <member name="M:Web.API.Controllers.BookController.AddBook(Domain.Model.Book.CreateBookModel)">
            <summary>
            Método responsável por cadastrar um novo livro - Necessário permissão de Administrador
            </summary>
            <remarks>
            Exemplo:
            
                POST
                {
                    "title": "Matrix",
                    "genre": "Action"
                }
            </remarks>
            <param name="book">Objeto contendo as informações do livro a cadastrar.</param>
            <returns>O objeto recém criado.</returns>
            <response code="201">Objeto criado.</response>
            <response code="400">Se as informações do objeto forem inválidas ou se o nome do livro já estiver cadastrado.</response>
            <response code="500">Exceção não tratada.</response>
        </member>
        <member name="M:Web.API.Controllers.BookController.UpdateBook(Domain.Model.Book.UpdateBookModel,System.Int32)">
            <summary>
            Método responsável por editar um livro cadastrado - Necessário permissão de Administrador
            </summary>
            <remarks>
            Exemplo:
            
                PUT 
                {
                    "title": "Adam Sandler",
                    "genre": "Comedy"
                }
            </remarks>
            <param name="book">Objeto contendo as informações atualizadas.</param>
            <param name="id">Identificador do livro a ser atualizado.</param>
            <returns>Não possui conteúdo de resposta.</returns>
            <response code="201"></response>
            <response code="400">Se as informações do objeto forem inválidas, o nome do livro já estiver cadastrado ou se o livro não for encontrado na base de dados.</response>
            <response code="500">Exceção não tratada.</response>
        </member>
        <member name="M:Web.API.Controllers.BookController.DeleteBook(System.Int32)">
            <summary>
            Método responsável por excluir um livro cadastrado - Necessário permissão de Administrador
            </summary>
            <param name="id">Identificador do livro a ser excluído.</param>
            <returns>Não possui conteúdo de resposta.</returns>
            <response code="201"></response>
            <response code="400">Livro não encontrado na base de dados.</response>
            <response code="500">Exceção não tratada.</response>
        </member>
        <member name="M:Web.API.Controllers.UserController.Login(Domain.Model.User.UserModel)">
            <summary>
            Método de autenticação de usuário - Acesso Livre
            </summary>
            <remarks>
            Exemplo:
            
                POST
                {
                    "username": "Admin",
                    "password": "admin123"
                }
            </remarks>
            <param name="user">Credenciais do usuário a logar.</param>
            <returns>Um token de autenticação.</returns>
            <response code="200">Token de autenticação.</response>
            <response code="400">Usuário ou senha inválido.</response>
            <response code="500">Exceção não tratada.</response>
        </member>
    </members>
</doc>
